@model CommoditySearchModel

@using Nop.Core.Domain.Catalog;

@{
    //page title
    ViewBag.Title = T("Admin.Catalog.Commodity").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Commodities");
}

@{
    const string hideSearchBlockAttributeName = "CommodityListPage.HideSearchBlock";
    var hideSearchBlock = genericAttributeService.GetAttribute<bool>(workContext.CurrentCustomer, hideSearchBlockAttributeName);
}

<form asp-controller="Commodity" asp-action="List" method="post">
        <div class="content-header clearfix">
            <h1 class="pull-left">
                @T("Admin.Catalog.Commodities")
            </h1>
            <div class="pull-right">
                <a asp-action="Create" class="btn bg-blue">
                    <i class="fa fa-plus-square"></i>
                    @T("Admin.Common.AddNew")
                </a>
                <button type="submit" name="download-catalog-pdf" class="btn bg-purple">
                    <i class="fa fa-file-pdf-o"></i>
                    @T("Admin.Catalog.Commodities.List.DownloadPDF")
                </button>
                <div class="btn-group">
                    <button type="button" class="btn btn-success">
                        <i class="fa fa-download"></i>
                        @T("Admin.Common.Export")
                    </button>
                    <button type="button" class="btn btn-success dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                        <span class="caret"></span>
                        <span class="sr-only">&nbsp;</span>
                    </button>
                    <ul class="dropdown-menu" role="menu">
                        <li>
                            <button type="submit" name="exportxml-all">
                                <i class="fa fa-file-code-o"></i>
                                @T("Admin.Common.ExportToXml.All")
                            </button>
                        </li>
                        <li>
                            <button type="button" id="exportxml-selected">
                                <i class="fa fa-file-code-o"></i>
                                @T("Admin.Common.ExportToXml.Selected")
                            </button>
                        </li>
                        <li class="divider"></li>
                        <li>
                            <button type="submit" name="exportexcel-all">
                                <i class="fa fa-file-excel-o"></i>
                                @T("Admin.Common.ExportToExcel.All")
                            </button>
                        </li>
                        <li>
                            <button type="button" id="exportexcel-selected">
                                <i class="fa fa-file-excel-o"></i>
                                @T("Admin.Common.ExportToExcel.Selected")
                            </button>
                        </li>
                    </ul>
                </div>

                <button type="button" id="delete-selected" class="btn bg-red">
                    <i class="fa fa-trash-o"></i>
                    @T("Admin.Common.Delete.Selected")
                </button>
                <nop-action-confirmation asp-button-id="delete-selected" />
                @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CommodityListButtons })
            </div>
        </div>

        <div class="content">
            <div class="form-horizontal">
                <div class="panel-group">
                    <div class="panel panel-default panel-search">
                        <div class="panel-body">
                            <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                                <div class="search-text">@T("Admin.Common.Search")</div>
                                <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                                <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                            </div>

                            <div class="search-body @(hideSearchBlock ? "closed" : "")">
                                <div class="row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <div class="col-md-4">
                                                <nop-label asp-for="SearchCommodityName" />
                                            </div>
                                            <div class="col-md-8">
                                                <nop-editor asp-for="SearchCommodityName" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-7">
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-7 col-md-offset-5">
                                        <button type="button" id="search-commodities" class="btn btn-primary btn-search">
                                            <i class="fa fa-search"></i>
                                            @T("Admin.Common.Search")
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="panel panel-default">
                        <div class="panel-body">
                            @**@
                            @await Html.PartialAsync("Table", new DataTablesModel
                           {
                               Name = "commodities-grid",
                               UrlRead = new DataUrl("CommodityList", "Commoditiy", null),
                               SearchButtonId = "search-commodities",
                               Length = Model.PageSize,
                               LengthMenu = Model.AvailablePageSizes,
                               Filters = new List<FilterParameter>
                               {
                                   new FilterParameter(nameof(Model.SearchCommodityName))
                               },
                               ColumnCollection = new List<ColumnProperty>
                               {
                                   new ColumnProperty(nameof(CommodityModel.Id))
                                   {
                                       IsMasterCheckBox = true,
                                       Render = new RenderCheckBox("checkbox_commodities"),
                                       ClassName =  NopColumnClassDefaults.CenterAll,
                                       Width = "50",
                                   },
                                   new ColumnProperty(nameof(CommodityModel.Name))
                                   {
                                       Title = T("Admin.Catalog.Commodities.Fields.Name").Text,
                                       Width = "300"
                                   },
                                   new ColumnProperty(nameof(CommodityModel.Price))
                                   {
                                       Title = T("Admin.Catalog.Commodities.Fields.Price").Text,
                                       Width = "150",
                                       Render = new RenderCustom("renderColumnPrice")
                                   },
                                   new ColumnProperty(nameof(CommodityModel.Id))
                                   {
                                       Title = T("Admin.Common.Edit").Text,
                                       Width = "100",
                                       ClassName =  NopColumnClassDefaults.Button,
                                       Render = new RenderButtonEdit(new DataUrl("Edit"))
                                   }
                               }
                           })

                            <script>
                            //function renderColumnPrice(data, type, row, meta) {
                            //    return (row.ProductTypeId != @((int)ProductType.GroupedProduct) ) ? data : null;
                           // }

                            $(document).ready(function () {
                                $('#delete-selected-action-confirmation-submit-button').bind('click', function () {
                                    var postData = {
                                        selectedIds: selectedIds
                                    };
                                    addAntiForgeryToken(postData);
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("DeleteSelected", "Commodity"))",
                                        data: postData,
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            $('#deleteSelectedFailed-info').text(errorThrown);
                                            $('#deleteSelectedFailed').click();
                                        },
                                        complete: function (jqXHR, textStatus) {
                                            updateTable('#commodities-grid');
                                        }
                                    });
                                    $('#delete-selected-action-confirmation').modal('toggle');
                                    return false;
                                });
                            });

                            </script>
                            <nop-alert asp-alert-id="deleteSelectedFailed" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
</form>

<script>
    $(document).ready(function () {
        $('#exportexcel-selected').click(function (e) {
            e.preventDefault();
            var ids = selectedIds.join(",");
            $('#export-excel-selected-form #selectedIds').val(ids);
            $('#export-excel-selected-form').submit();
            updateTable('#commodities-grid');
            return false;
        });
    });
</script>